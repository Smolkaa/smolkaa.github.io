---
title: "TSU Mini-Moon Seminar"
# image: 
author: Alexander Smolka
date: 15 08 23
categories:
  - Misc

---

{{< include /resources/latex/_defs.qmd >}}
{{< include /resources/latex/_symbols.qmd >}}
---


# Lunar Surface Temperatures

::: {.panel-tabset}

# {{< fa image >}} Figure

::: {#fig-lunar_surface_temperatures layout-ncol=2}
![Selenographic coordinate system.](imgs/temperature_animations/anim_raw_diviner/anim.gif){#fig-diviner-selenographic width=600px}

![Subsolar (local time) coordinate system.](imgs/temperature_animations/anim_raw_diviner_fixed/anim.gif){#fig-diviner-subsolar width=600px}

![Subsolar (local time) coordinate system, averaged.](imgs/temperature_animations/diviner_avg.png){#fig-diviner-avg width=600px}

![Subsolar (local time) coordinate system, analytic temperature model by @Hurley2015.](imgs/temperature_animations/hurley2015.png){#fig-hurley2015 width=600px}

Diviner lunar surface temperature measurements and analytic surface temperature model predictions in selenographic and subsolar (local time) coordinate systems. The static figures include a contour line at $\SI{100}{\kelvin}$ for an improved comparison.
:::

# {{< fa code >}} Julia
```julia
using Printf
using .ExESS

#::. define colormap for figures
cmap = lipari

#::. functions
function _default_(N=240, M=120)
    fig     = Figure(;resolution=(600,285))
    ga      = MyLTGeoAxis(fig[1,1];)
    xlims!(ga, -180, 180); ylims!(ga, -90, 90)
    theta   = range(-1,1,N) .* pi .* 0.995
    phi     = range(-1,1,M) .* pi/2 .* 0.96
    return fig, ga, theta, phi
end

function anim_raw_diviner(steps=18)
    fig, ga, theta, phi = _default_(720, 360)
    ga.xticklabelcolor = :white
    ga.xlabelcolor = :white

    N, M = length(theta), length(phi)
    T = lunar_surface_temperatures_diviner(0, theta, phi)
    T = reshape(T,N,M)
    s = heatmap!(ga, -179..179, -89..89, T; colormap=cmap, colorrange=(50,400))
    Colorbar(fig[:,2], s, label="Temperature [K]") 

    for step in 1:steps
        T = lunar_surface_temperatures_diviner((step-1)*2*pi/steps, theta, phi)
        T = reshape(T,N,M)
        s[3] = T
        
        save(joinpath(@__DIR__, "anim_raw_diviner", @sprintf "%02i.png" step), fig, px_per_unit=4)
    end
    return nothing
end

function anim_raw_diviner_fixed(steps=18)
    fig, ga, theta, phi = _default_(720, 360)

    N, M = length(theta), length(phi)
    T = lunar_surface_temperatures_diviner(0, theta, phi)
    T = reshape(T,N,M)
    s = heatmap!(ga, -179..179, -89..89, T; colormap=cmap, colorrange=(50,400))
    Colorbar(fig[:,2], s, label="Temperature [K]") 

    for step in 1:steps
        Nstep = floor(Int64, (step-1)*N/steps)
        T = lunar_surface_temperatures_diviner(Nstep/N * 2pi, theta, phi)
        T = reshape(T,N,M)
        s[3] = T[vcat(Nstep+1:N, 1:Nstep), :]
        
    save(joinpath(@__DIR__, "anim_raw_diviner_fixed", @sprintf "%02i.png" step), fig, px_per_unit=4)
    end
    return nothing
end

function plot_diviner_avg()
    fig, ga, theta, phi = _default_()
    
    N, M = length(theta), length(phi)
    T = lunar_surface_temperatures_diviner_avg(theta, phi)
    T = reshape(T,N,M)

    s = heatmap!(ga, -179..179, -89..89, T; colormap=cmap, colorrange=(50,400))
    c = contour!(ga, -179..179, -89..89, T; color=:white, levels=[100], linewidth=0.7)
    t = text!(ga, -138, 0; text="100K", align=(:center,:center), color=:white)

    Colorbar(fig[:,2], s, label="Temperature [K]")

    save(joinpath(@__DIR__, "diviner_avg.png"), fig, px_per_unit=4)
    return nothing
end

function plot_hurley()
    fig, ga, theta, phi = _default_()
    T = lunar_surface_temperatures_HURLEY2015(theta, phi)

    s = heatmap!(ga, -179..179, -89..89, T; colormap=cmap, colorrange=(50,400))
    c = contour!(ga, -179..179, -89..89, T; color=:white, levels=[100], linewidth=0.7)
    t = text!(ga, -138, 0; text="100K", align=(:center,:center), color=:white)

    Colorbar(fig[:,2], s, label="Temperature [K]") 

    save(joinpath(@__DIR__, "hurley2015.png"), fig, px_per_unit=4)
    return nothing
end
```

Note that for the animations the generated images have to be converted into an animated `.gif` image.

# {{< fa download >}} Download

* {{< downloadthis imgs/temperature_animations/anim_raw_diviner/anim.gif label="diviner.gif" type="light" dname="diviner" >}}
* {{< downloadthis imgs/temperature_animations/anim_raw_diviner_fixed/anim.gif label="diviner_fixed.gif" type="light" dname="diviner_fixed" >}}
* {{< downloadthis imgs/temperature_animations/diviner_avg.png label="diviner_avg.png" type="light" dname="diviner_avg" >}}
* {{< downloadthis imgs/temperature_animations/hurley2015.png label="hurley2015.png" type="light" dname="hurley2015" >}}

:::