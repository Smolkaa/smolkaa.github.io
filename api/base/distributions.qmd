---
title: "Distributions"
---

{{< include /resources/latex/_defs.qmd >}}
{{< include /resources/latex/_symbols.qmd >}}

---

## Type Structure

The following structure shows all currently implemented coordinates in `ExESS`:

```julia
ExESS
└─ AbstractDistribution
    ├─ AbstractPositionDistribution{S} where {S<:AbstractFloat}
    │   ├─ EqualSurfaceDistribution{S} where {S<:AbstractFloat}
    │   └─ SolarWindSurfaceDistribution{S} where {S<:AbstractFloat}
    └─ AbstractVelocityDistribution{S} where {S<:AbstractFloat}
        ├─ MaxwellBoltzmannVelocityDistribution{S} where {S<:AbstractFloat}
        └─ MaxwellBoltzmannFluxVelocityDistribution{S} where {S<:AbstractFloat}
```

Note that the velocity distributions are of subtype `AbstractFloat`.

## Usage 

### Position Distributions

### Velocity Distributions

For the theoretical description of the velocity distributions, please read the [documentation](/documentation/drivers/thermal_sorption.qmd#sec-velocity-distributions).

Generally, the two implemented velocity distributions can be created by calling the respective constructor with the respective temperature and mass as input arguments:

```julia
T, m = 250.0, amu2kg(4) # [K], [kg] (mass of helium)
vd_mb = MaxwellBoltzmannVelocityDistribution(T, m)
vd_mbf = MaxwellBoltzmannFluxVelocityDistribution(T, m)
```

```{julia}
#| output: false
#| echo: false
if !isdefined(Main, :ExESS)
include(joinpath(@__DIR__, "..", "..", "..", "exess.jl", "src", "ExESS.jl"))
using .ExESS
end
T, m = 250.0, amu2kg(4) # [K], [kg] (mass of helium)
vd_mb = MaxwellBoltzmannVelocityDistribution(T, m)
vd_mbf = MaxwellBoltzmannFluxVelocityDistribution(T, m)
```

{{< include examples/_distribution_sampling.qmd >}}

{{< include examples/_distribution_cdf.qmd >}}

## API

::: {.callout-note appearance="simple" icon=false}
# ``EqualSurfaceDistribution`` -- Struct
```{julia}
#| echo: false
if !isdefined(Main, :ExESS)
include(joinpath(@__DIR__, "..", "..", "..", "exess.jl", "src", "ExESS.jl"))
using .ExESS
end
@doc ExESS.EqualSurfaceDistribution
```
:::

::: {.callout-note appearance="simple" icon=false}
# ``SolarWindSurfaceDistribution`` -- Struct
```{julia}
#| echo: false
if !isdefined(Main, :ExESS)
include(joinpath(@__DIR__, "..", "..", "..", "exess.jl", "src", "ExESS.jl"))
using .ExESS
end
@doc ExESS.SolarWindSurfaceDistribution
```
:::

::: {.callout-note appearance="simple" icon=false}
# ``MaxwellBoltzmannVelocityDistribution`` -- Struct
```{julia}
#| echo: false
if !isdefined(Main, :ExESS)
include(joinpath(@__DIR__, "..", "..", "..", "exess.jl", "src", "ExESS.jl"))
using .ExESS
end
@doc ExESS.MaxwellBoltzmannVelocityDistribution
```
:::

::: {.callout-note appearance="simple" icon=false}
# ``MaxwellBoltzmannFluxVelocityDistribution`` -- Struct
```{julia}
#| echo: false
if !isdefined(Main, :ExESS)
include(joinpath(@__DIR__, "..", "..", "..", "exess.jl", "src", "ExESS.jl"))
using .ExESS
end
@doc ExESS.MaxwellBoltzmannFluxVelocityDistribution
```
:::

### Utility Functions

::: {.callout-note appearance="simple" icon=false}
# ``azimuth`` -- Function
```{julia}
#| echo: false
if !isdefined(Main, :ExESS)
include(joinpath(@__DIR__, "..", "..", "..", "exess.jl", "src", "ExESS.jl"))
using .ExESS
end
@doc ExESS.azimuth
```
:::

::: {.callout-note appearance="simple" icon=false}
# ``azimuth_cdf`` -- Function
```{julia}
#| echo: false
if !isdefined(Main, :ExESS)
include(joinpath(@__DIR__, "..", "..", "..", "exess.jl", "src", "ExESS.jl"))
using .ExESS
end
@doc ExESS.azimuth_cdf
```
:::

::: {.callout-note appearance="simple" icon=false}
# ``azimuth_pdf`` -- Function
```{julia}
#| echo: false
if !isdefined(Main, :ExESS)
include(joinpath(@__DIR__, "..", "..", "..", "exess.jl", "src", "ExESS.jl"))
using .ExESS
end
@doc ExESS.azimuth_pdf
```
:::

::: {.callout-note appearance="simple" icon=false}
# ``elevation`` -- Function
```{julia}
#| echo: false
if !isdefined(Main, :ExESS)
include(joinpath(@__DIR__, "..", "..", "..", "exess.jl", "src", "ExESS.jl"))
using .ExESS
end
@doc ExESS.elevation
```
:::

::: {.callout-note appearance="simple" icon=false}
# ``elevation_cdf`` -- Function
```{julia}
#| echo: false
if !isdefined(Main, :ExESS)
include(joinpath(@__DIR__, "..", "..", "..", "exess.jl", "src", "ExESS.jl"))
using .ExESS
end
@doc ExESS.elevation_cdf
```
:::

::: {.callout-note appearance="simple" icon=false}
# ``elevation_pdf`` -- Function
```{julia}
#| echo: false
if !isdefined(Main, :ExESS)
include(joinpath(@__DIR__, "..", "..", "..", "exess.jl", "src", "ExESS.jl"))
using .ExESS
end
@doc ExESS.elevation_pdf
```
:::

::: {.callout-note appearance="simple" icon=false}
# ``pos`` -- Function
```{julia}
#| echo: false
if !isdefined(Main, :ExESS)
include(joinpath(@__DIR__, "..", "..", "..", "exess.jl", "src", "ExESS.jl"))
using .ExESS
end
@doc ExESS.pos
```
:::

::: {.callout-note appearance="simple" icon=false}
# ``pos_cdf`` -- Function
```{julia}
#| echo: false
if !isdefined(Main, :ExESS)
include(joinpath(@__DIR__, "..", "..", "..", "exess.jl", "src", "ExESS.jl"))
using .ExESS
end
@doc ExESS.pos_cdf
```
:::

::: {.callout-note appearance="simple" icon=false}
# ``pos_pdf`` -- Function
```{julia}
#| echo: false
if !isdefined(Main, :ExESS)
include(joinpath(@__DIR__, "..", "..", "..", "exess.jl", "src", "ExESS.jl"))
using .ExESS
end
@doc ExESS.pos_pdf
```
:::

::: {.callout-note appearance="simple" icon=false}
# ``speed`` -- Function
```{julia}
#| echo: false
if !isdefined(Main, :ExESS)
include(joinpath(@__DIR__, "..", "..", "..", "exess.jl", "src", "ExESS.jl"))
using .ExESS
end
@doc ExESS.speed
```
:::

::: {.callout-note appearance="simple" icon=false}
# ``speed_cdf`` -- Function
```{julia}
#| echo: false
if !isdefined(Main, :ExESS)
include(joinpath(@__DIR__, "..", "..", "..", "exess.jl", "src", "ExESS.jl"))
using .ExESS
end
@doc ExESS.speed_cdf
```
:::

::: {.callout-note appearance="simple" icon=false}
# ``speed_pdf`` -- Function
```{julia}
#| echo: false
if !isdefined(Main, :ExESS)
include(joinpath(@__DIR__, "..", "..", "..", "exess.jl", "src", "ExESS.jl"))
using .ExESS
end
@doc ExESS.speed_pdf
```
:::

::: {.callout-note appearance="simple" icon=false}
# ``velocity`` -- Function
```{julia}
#| echo: false
if !isdefined(Main, :ExESS)
include(joinpath(@__DIR__, "..", "..", "..", "exess.jl", "src", "ExESS.jl"))
using .ExESS
end
@doc ExESS.velocity
```
:::

::: {.callout-note appearance="simple" icon=false}
# ``velocity_cdf`` -- Function
```{julia}
#| echo: false
if !isdefined(Main, :ExESS)
include(joinpath(@__DIR__, "..", "..", "..", "exess.jl", "src", "ExESS.jl"))
using .ExESS
end
@doc ExESS.velocity_cdf
```
:::

::: {.callout-note appearance="simple" icon=false}
# ``velocity_pdf`` -- Function
```{julia}
#| echo: false
if !isdefined(Main, :ExESS)
include(joinpath(@__DIR__, "..", "..", "..", "exess.jl", "src", "ExESS.jl"))
using .ExESS
end
@doc ExESS.velocity_pdf
```
:::

::: {.callout-note appearance="simple" icon=false}
# ``zenith`` -- Function
```{julia}
#| echo: false
if !isdefined(Main, :ExESS)
include(joinpath(@__DIR__, "..", "..", "..", "exess.jl", "src", "ExESS.jl"))
using .ExESS
end
@doc ExESS.zenith
```
:::

::: {.callout-note appearance="simple" icon=false}
# ``zenith_cdf`` -- Function
```{julia}
#| echo: false
if !isdefined(Main, :ExESS)
include(joinpath(@__DIR__, "..", "..", "..", "exess.jl", "src", "ExESS.jl"))
using .ExESS
end
@doc ExESS.zenith_cdf
```
:::

::: {.callout-note appearance="simple" icon=false}
# ``velocity_pdf`` -- Function
```{julia}
#| echo: false
if !isdefined(Main, :ExESS)
include(joinpath(@__DIR__, "..", "..", "..", "exess.jl", "src", "ExESS.jl"))
using .ExESS
end
@doc ExESS.zenith_pdf
```
:::


## Benchmarks

{{< include /../exess.jl/test/benchmarks/base/__distributions__.md >}}
