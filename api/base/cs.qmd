---
title: "Coordinate Systems"
---

---

Coordinates in `ExESS` are implemented as their custom, three-dimensional vectors, which
are based on their scope, the coordinate system, and their physical type. The scope can
either be `Global[...]` or `Local[...]`, which is referring to a fixed planetary system or
a local reference frame, respectively. The coordinate system is either `[...]Cartesian[...]`
or `[...]Spherical[...]`, which is referring to a Cartesian or spherical coordinate system,
respectively. The physical type is either `[...]Position` or `[...]Velocity`, which is referring 
to a position or velocity vector, respectively. 

# Type Structure

The following structure shows all currently implemented coordinates in `ExESS`:

```julia
ExESS
└─ AbstractCoordinates
    │
    ├─ AbstractPosition
    │  ├─ GlobalCartesianPosition{T<:Real}
    │  ├─ LocalCartesianPosition{T<:Real}
    │  └─ GlobalSphericalPosition{T<:Real}
    │
    └─ AbstractVelocity
       ├─ GlobalCartesianVelocity{T<:Real}
       ├─ LocalCartesianVelocity{T<:Real}
       └─ GlobalSphericalVelocity{T<:Real}
```

More information on the mathematical description of the different coordinate vectors and the mathematical foundation for the conversion functions are presented in [Cartesian and Spherical Coordinates](/documentation/fundamentals/coordinate_systems.qmd).


# Usage

## Conversions

### Local-to-Global
In general, local-to-global conversions are not possible without providing additional information. The main problem is that local coordinates inherently convey less information (i.e., where in the "global world" the local reference frame is located).


# API

::: {.callout-note appearance="simple" icon=false}
# ``GlobalCartesianPosition`` -- Struct
```{julia}
#| echo: false
if !isdefined(Main, :ExESS)
include(joinpath(@__DIR__, "..", "..", "..", "exess.jl", "src", "ExESS.jl"))
using .ExESS
end
@doc ExESS.GlobalCartesianPosition
```
:::

::: {.callout-note appearance="simple" icon=false}
# ``LocalCartesianPosition`` -- Struct
```{julia}
#| echo: false
if !isdefined(Main, :ExESS)
include(joinpath(@__DIR__, "..", "..", "..", "exess.jl", "src", "ExESS.jl"))
using .ExESS
end
@doc ExESS.LocalCartesianPosition
```
:::

::: {.callout-note appearance="simple" icon=false}
# ``GlobalSphericalPosition`` -- Struct
```{julia}
#| echo: false
if !isdefined(Main, :ExESS)
include(joinpath(@__DIR__, "..", "..", "..", "exess.jl", "src", "ExESS.jl"))
using .ExESS
end
@doc ExESS.GlobalSphericalPosition
```
:::